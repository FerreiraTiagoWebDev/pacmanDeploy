{"mappings":"AAAO,MAEMA,EAAa,CACxBC,UAAW,CACTC,KAAM,GACNC,UAAU,EACVC,SAAU,KAEZC,QAAS,CACPH,KAAM,GACNC,UAVqB,GAWrBC,SAAU,KAEZE,WAAY,CACVJ,KAAM,GACNC,SAAU,EACVC,SAAU,GAEZG,UAAW,CACTL,KAAM,GACNC,SApBqB,GAqBrBC,SAAU,KAIDI,EAEL,OAFKA,EAGN,MAHMA,EAIH,SAJGA,EAKJ,QALIA,EAML,OANKA,EAOJ,QAPIA,EAQL,OARKA,EASH,SATGA,EAUJ,QAVIA,EAWH,SAXGA,EAYA,OAIAC,EAAa,CAfjB,QAiBPD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,GA6BWE,EAAS,CACpB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,E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","sources":["setup.js","ghostmoves.js","GameBoard.js","Pacman.js","Ghost.js","index.js"],"sourcesContent":["export const GRID_SIZE = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n  ArrowLeft: {\n    code: 37,\n    movement: -1,\n    rotation: 180\n  },\n  ArrowUp: {\n    code: 38,\n    movement: -GRID_SIZE,\n    rotation: 270\n  },\n  ArrowRight: {\n    code: 39,\n    movement: 1,\n    rotation: 0\n  },\n  ArrowDown: {\n    code: 40,\n    movement: GRID_SIZE,\n    rotation: 90\n  }\n};\n\nexport const OBJECT_TYPE = {\n  BLANK: 'blank',\n  WALL: 'wall',\n  DOT: 'dot',\n  BLINKY: 'blinky',\n  PINKY: 'pinky',\n  INKY: 'inky',\n  CLYDE: 'clyde',\n  PILL: 'pill',\n  PACMAN: 'pacman',\n  GHOST: 'ghost',\n  SCARED: 'scared',\n  GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n  OBJECT_TYPE.BLANK,\n  OBJECT_TYPE.WALL,\n  OBJECT_TYPE.DOT,\n  OBJECT_TYPE.BLINKY,\n  OBJECT_TYPE.PINKY,\n  OBJECT_TYPE.INKY,\n  OBJECT_TYPE.CLYDE,\n  OBJECT_TYPE.PILL,\n  OBJECT_TYPE.PACMAN,\n  OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1, \n  1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1, \n  0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n  1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n  1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n  1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\nexport const LEVEL2 = [\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n  1, 7, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 1, 1, 1, 1, 1, 1, 7, 1,\n  1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 2, 2, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 2, 2, 2, 2, 2, 1, \n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 7, 1, \n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 2, 2, 2, 2, 2, 1, \n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1,\n  1, 0, 0, 0, 2, 7, 2, 0, 2, 0, 0, 2, 7, 2, 0, 2, 0, 0, 0, 1,\n  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\n\n// Primitive random movement.\nexport function randomMovement(position, direction, objectExist) {\n  let dir = direction;\n  let nextMovePos = position + dir.movement;\n  // Create an array from the diretions objects keys\n  const keys = Object.keys(DIRECTIONS);\n\n  while (\n    objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n    objectExist(nextMovePos, OBJECT_TYPE.GHOST)\n  ) {\n    // Get a random key from that array\n    const key = keys[Math.floor(Math.random() * keys.length)];\n    // Set the new direction\n    dir = DIRECTIONS[key];\n    // Set the next move\n    nextMovePos = position + dir.movement;\n  }\n\n  return { nextMovePos, direction: dir };\n}\n","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\n\nclass GameBoard {\n  constructor(DOMGrid) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid = DOMGrid;\n  }\n\n  showGameStatus(gameWin) {\n    // Create and show game win or game over\n    const div = document.createElement('div');\n    div.classList.add('game-status');\n    div.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER!'}`;\n    this.DOMGrid.appendChild(div);\n  }\n\n  createGrid(level) {\n    this.dotCount = 0;\n    this.grid = [];\n    this.DOMGrid.innerHTML = '';\n    // First set correct amount of columns based on Grid Size and Cell Size\n    this.DOMGrid.style.cssText = `grid-template-columns: repeat(${GRID_SIZE}, ${CELL_SIZE}px);`;\n\n    level.forEach((square) => {\n      const div = document.createElement('div');\n      div.classList.add('square', CLASS_LIST[square]);\n      div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\n      this.DOMGrid.appendChild(div);\n      this.grid.push(div);\n\n      // Add dots\n      if (CLASS_LIST[square] === OBJECT_TYPE.DOT) this.dotCount++;\n    });\n  }\n\n  addObject(pos, classes) {\n    this.grid[pos].classList.add(...classes);\n  }\n\n  removeObject(pos, classes) {\n    this.grid[pos].classList.remove(...classes);\n  }\n  // Can have an arrow function here cause of this binding\n  objectExist(pos, object) {\n    return this.grid[pos].classList.contains(object);\n  };\n\n  rotateDiv(pos, deg) {\n    this.grid[pos].style.transform = `rotate(${deg}deg)`;\n  }\n\n  moveCharacter(character) {\n    if (character.shouldMove()) {\n      const { nextMovePos, direction } = character.getNextMove(\n        this.objectExist.bind(this)\n      );\n      const { classesToRemove, classesToAdd } = character.makeMove();\n\n      if (character.rotation && nextMovePos !== character.pos) {\n        // Rotate\n        this.rotateDiv(nextMovePos, character.dir.rotation);\n        // Rotate the previous div back\n        this.rotateDiv(character.pos, 0);\n      }\n\n      this.removeObject(character.pos, classesToRemove);\n      this.addObject(nextMovePos, classesToAdd);\n\n      character.setNewPos(nextMovePos, direction);\n    }\n  }\n\n  static createGameBoard(DOMGrid, level) {\n    const board = new this(DOMGrid);\n    board.createGrid(level);\n    return board;\n  }\n}\n\nexport default GameBoard;\n","import { OBJECT_TYPE, DIRECTIONS } from './setup';\n\nclass Pacman {\n  constructor(speed, startPos) {\n    this.pos = startPos;\n    this.speed = speed;\n    this.dir = null;\n    this.timer = 0;\n    this.powerPill = false;\n    this.rotation = true;\n  }\n\n  shouldMove() {\n    // Don't move before a key is pressed\n    if (!this.dir) return;\n\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n    this.timer++;\n  }\n\n  getNextMove(objectExist) {\n    let nextMovePos = this.pos + this.dir.movement;\n    // Do we collide with a wall?\n    if (\n      objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n      objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n    ) {\n      nextMovePos = this.pos;\n    }\n\n    return { nextMovePos, direction: this.dir };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.PACMAN];\n    const classesToAdd = [OBJECT_TYPE.PACMAN];\n\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos) {\n    this.pos = nextMovePos;\n  }\n\n  handleKeyInput = (e, objectExist) => {\n    let dir;\n\n    if (e.keyCode >= 37 && e.keyCode <= 40) {\n      dir = DIRECTIONS[e.key];\n    } else {\n      return;\n    }\n\n    const nextMovePos = this.pos + dir.movement;\n    if (objectExist(nextMovePos, OBJECT_TYPE.WALL)) return;\n    this.dir = dir;\n  };\n}\n\nexport default Pacman;\n","import { DIRECTIONS, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './ghostmoves';\n\nclass Ghost {\n  constructor(speed = 5, startPos, movement, name) {\n    this.name = name;\n    this.movement = movement;\n    this.startPos = startPos;\n    this.pos = startPos;\n    this.dir = DIRECTIONS.ArrowRight;\n    this.speed = speed;\n    this.timer = 0;\n    this.isScared = false;\n    this.rotation = false;\n  }\n\n  shouldMove() {\n    if (this.timer === this.speed) {\n      this.timer = 0;\n      return true;\n    }\n    this.timer++;\n  }\n\n  getNextMove(objectExist) {\n    // Call move algoritm here\n    const { nextMovePos, direction } = this.movement(\n      this.pos,\n      this.dir,\n      objectExist\n    );\n    return { nextMovePos, direction };\n  }\n\n  makeMove() {\n    const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\n    let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n\n    if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n\n    return { classesToRemove, classesToAdd };\n  }\n\n  setNewPos(nextMovePos, direction) {\n    this.pos = nextMovePos;\n    this.dir = direction;\n  }\n}\n\nexport default Ghost;\n","import { LEVEL2, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './ghostmoves';\n// Classes\nimport GameBoard from './GameBoard';\nimport Pacman from './Pacman';\nimport Ghost from './Ghost';\n// Sounds\n// Dom Elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\n// Game constants\nconst POWER_PILL_TIME = 10000; // ms\nconst GLOBAL_SPEED = 80; // ms\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL2);\n// Initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\n\n\n// --- GAME CONTROLLER --- //\nfunction gameOver(pacman, grid) {\n  \n\n  document.removeEventListener('keydown', (e) =>\n    pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n  );\n\n  gameBoard.showGameStatus(gameWin);\n\n  clearInterval(timer);\n  // Show startbutton\n  startButton.classList.remove('hide');\n}\n\nfunction checkCollision(pacman, ghosts) {\n  const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\n\n  if (collidedGhost) {\n    if (pacman.powerPill) {\n      \n      gameBoard.removeObject(collidedGhost.pos, [\n        OBJECT_TYPE.GHOST,\n        OBJECT_TYPE.SCARED,\n        collidedGhost.name\n      ]);\n      collidedGhost.pos = collidedGhost.startPos;\n      score += 100;\n    } else {\n      gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n      gameBoard.rotateDiv(pacman.pos, 0);\n      gameOver(pacman, gameGrid);\n    }\n  }\n}\n\nfunction gameLoop(pacman, ghosts) {\n  // 1. Move Pacman\n  gameBoard.moveCharacter(pacman);\n  // 2. Check Ghost collision on the old positions\n  checkCollision(pacman, ghosts);\n  // 3. Move ghosts\n  ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n  // 4. Do a new ghost collision check on the new positions\n  checkCollision(pacman, ghosts);\n  // 5. Check if Pacman eats a dot\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n  \n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n    // Remove a dot\n    gameBoard.dotCount--;\n    // Add Score\n    score += 10;\n  }\n  // 6. Check if Pacman eats a power pill\n  if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n    \n\n    gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\n    pacman.powerPill = true;\n    score += 50;\n\n    clearTimeout(powerPillTimer);\n    powerPillTimer = setTimeout(\n      () => (pacman.powerPill = false),\n      POWER_PILL_TIME\n    );\n  }\n  // 7. Change ghost scare mode depending on powerpill\n  if (pacman.powerPill !== powerPillActive) {\n    powerPillActive = pacman.powerPill;\n    ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n  }\n  // 8. Check if all dots have been eaten\n  if (gameBoard.dotCount === 0) {\n    gameWin = true;\n    gameOver(pacman, gameGrid);\n  }\n  // 9. Show new score\n  scoreTable.innerHTML = score;\n}\n\nfunction startGame() {\n\n\n  gameWin = false;\n  powerPillActive = false;\n  score = 0;\n\n  startButton.classList.add('hide');\n\n  gameBoard.createGrid(LEVEL2);\n\n  const pacman = new Pacman(2, 287);\n  gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n  document.addEventListener('keydown', (e) =>\n    pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n  );\n\n  const ghosts = [\n    new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n    new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n    new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n    new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n  ];\n\n  // Gameloop\n  timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n// Initialize game\nstartButton.addEventListener('click', startGame);\n\n\n"],"names":["$1664a224ef6e9aa3$export$4aabe0d20c9c03b3","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","$1664a224ef6e9aa3$export$852b3d7559c48ae8","$1664a224ef6e9aa3$export$19cc2a5451235cae","$1664a224ef6e9aa3$export$d2a632029536770f","$9135452711c4a279$export$44b6179c6c33dab2","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","$a1624c8adabc2d74$export$2e2bcd8739ae039","DOMGrid","this","dotCount","grid","showGameStatus","gameWin","div","document","createElement","classList","add","innerHTML","appendChild","createGrid","level","style","cssText","forEach","square","push","addObject","pos","classes","removeObject","pos1","classes1","remove","pos2","object","contains","rotateDiv","pos3","deg","transform","moveCharacter","character","shouldMove","getNextMove","bind","classesToRemove","classesToAdd","makeMove","setNewPos","DOMGrid1","level1","board","$3061829b9159488c$export$2e2bcd8739ae039","speed","startPos","timer","powerPill","objectExist1","nextMovePos1","handleKeyInput","e","keyCode","$a8f3b45975069538$export$2e2bcd8739ae039","name","isScared","$a501d8345a242c58$var$gameGrid","querySelector","$a501d8345a242c58$var$scoreTable","$a501d8345a242c58$var$startButton","$a501d8345a242c58$var$gameBoard","createGameBoard","$a501d8345a242c58$var$score","$a501d8345a242c58$var$timer","$a501d8345a242c58$var$gameWin","$a501d8345a242c58$var$powerPillActive","$a501d8345a242c58$var$powerPillTimer","$a501d8345a242c58$var$gameOver","pacman","removeEventListener","clearInterval","$a501d8345a242c58$var$checkCollision","ghosts","collidedGhost","find","ghost","addEventListener","setInterval","clearTimeout","setTimeout","$a501d8345a242c58$var$gameLoop"],"version":3,"file":"index.cad6a18e.js.map"}